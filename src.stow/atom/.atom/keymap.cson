# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

# Plugins
# -------

## vim-mode-plus
## -------------
#'atom-text-editor.vim-mode-plus:not(.insert-mode)':
#    'q': 'atom-keyboard-macros-vim:toggle_record_macro_vim'
#    '@': 'atom-keyboard-macros-vim:execute_macro_vim'
#    'Q': 'atom-keyboard-macros:call_last_kbd_macro'

'body':
  'ctrl-w': 'unset!'
  'ctrl-w escape': 'core:close'
  'ctrl-w left': 'window:focus-pane-on-left'
  'ctrl-w right': 'window:focus-pane-on-right'
  'ctrl-w up': 'window:focus-pane-above'
  'ctrl-w down': 'window:focus-pane-below'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  'alt-h': 'custom:scroll-left-4'
  'alt-j': 'custom:scroll-down-4'
  'alt-k': 'custom:scroll-up-4'
  'alt-l': 'custom:scroll-right-4'
